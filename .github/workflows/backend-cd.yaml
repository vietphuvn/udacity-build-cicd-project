# Workflow name
name: Backend CD

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch: null
  
  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main
    paths:
      - "backend/**"
      
  # Automatic trigger on pull request events targeting the main branch
  # pull_request:
  #   branches:
  #     - main
      
  # Scheduled trigger at 5:00 AM UTC, Monday through Friday
  # schedule:
  #   - cron: '0 5 * * 1-5'

# Jobs defined in the workflow
jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: "pipenv"
      - name: Run pipenv
        uses: tiagovrtr/actions-pipenv@v1
        with:
          pipenv-version: "v2023.10.24"
      - name: Pipenv install
        run: cd backend && pipenv install
      - name: Run test
        run: cd backend && pipenv run test

  build-job:
    needs: [test-job]
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCOUNT_ID: 017799191696
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: "pipenv"
      - name: Run pipenv
        uses: tiagovrtr/actions-pipenv@v1
        with:
          pipenv-version: "v2023.10.24"
      - name: Pipenv install
        run: cd backend && pipenv install
      - name: Run test
        run: cd backend && pipenv run test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: latest
        run: |
          cd backend
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  # post-build-actions:
  #   needs: [build-and-test-1, build-and-test-2]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Publish test results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: test-results
  #         path: test-results.xml

  deploy-to-k8-job:
    needs: [build-job]
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCOUNT_ID: 017799191696
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 
        uses: azure/setup-kubectl@v3
        id: install

      - name: Deploy to K8
        run: |
          cd backend
          cd k8s
          aws eks update-kubeconfig --name cluster
          kubectl apply -k .